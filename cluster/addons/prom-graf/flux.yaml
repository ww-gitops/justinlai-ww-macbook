apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 120m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  install:
    crds: Create
    remediation:
      retries: -1
  upgrade:
    crds: CreateReplace
    remediation:
      retries: -1
  interval: 5m
  chart:
    spec:
      version: "45.x"
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 60m
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    exporter:
      hostRootFsMount: false
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        general: true
        k8s: true
        kubeApiserver: true
        kubePrometheusNodeAlerting: true
        kubePrometheusNodeRecording: true
        kubernetesAbsent: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        network: true
        node: true
        prometheus: true
        prometheusOperator: true
        time: true

      ## Labels for default rules
      labels: {}
      ## Annotations for default rules
      annotations:
        priority: 'high'


    kubeControllerManager:
      enabled: true
      serviceMonitor:
        https: false
        insecureSkipVerify: true

    kubelet:
      enabled: true
      serviceMonitor:
        https: false

    alertmanager:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: local-ca-issuer
          nginx.ingress.kubernetes.io/rewrite-target: /
        tls:
        - secretName: alertmanager-tls
          hosts:
          - alertmanager.${dnsSuffix}

        hosts:
        - alertmanager.${dnsSuffix}

        paths:
        - /?(.*)
          

    prometheus:
      podDisruptionBudget:
        enabled: true
        minAvailable: 1
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: local-ca-issuer
          nginx.ingress.kubernetes.io/rewrite-target: /
        tls:
        - secretName: prometheus-tls
          hosts:
          - prometheus.${dnsSuffix}

        hosts:
        - prometheus.${dnsSuffix}

        paths:
        - /?(.*)

      prometheusSpec:
        externalUrl: 'https://prometheus.${dnsSuffix}/'
        # routePrefix: '/prometheus'
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring

      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'cluster1'
          routes:
          - match:
              alertname: 'CPUThrottlingHigh'
            receiver: 'null'
          - match:
              alertname: 'KubeStatefulSetReplicasMismatch'
            receiver: 'null'                 
          - match:
              alertname: Watchdog
            receiver: 'null'
          - match:
              severity: 'critical'
            receiver: 'null'
          - match_re:
              severity: '^(none|warning|critical)$'
            receiver: 'null'

    grafana:
      grafana.ini:
        server:
          root_url: "https://grafana.${dnsSuffix}/grafana"
          serve_from_sub_path: true
      adminPassword: Password123!
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: local-ca-issuer
          nginx.ingress.kubernetes.io/rewrite-target: /
        tls:
        - secretName: grafana-tls
          hosts:
            - grafana.${dnsSuffix}

        hosts:
        - grafana.${dnsSuffix}
        paths:
        - /?(.*)

  postRenderers:
    - kustomize:
        patches:
          - target:
              # Ignore these objects from Flux diff as they are mutated from chart hooks
              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)
              name: kube-prometheus-stack-admission
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          - target:
              # Ignore these objects from Flux diff as they are mutated at apply time but not at dry-run time
              kind: PrometheusRule
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
